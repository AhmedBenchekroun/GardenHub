# Generated by Django 2.0.2 on 2018-02-18 19:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import gardenhub.managers
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(help_text="The user's email address, which is used for notifications and doubles as the username for logging in.", max_length=254, unique=True, verbose_name='email address')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, help_text="The user's phone number, so site admins can directly contact them if needed.", max_length=128)),
                ('first_name', models.CharField(help_text="The user's given name or nickname, sometimes used in a casual context.", max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(help_text="The user's family name, sometimes used to distinguish one user from another.", max_length=150, verbose_name='last name')),
                ('photo', models.ImageField(blank=True, help_text='A photo of the user or an avatar.', upload_to='users', verbose_name='photo')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, help_text='The exact moment this user joined the website.', verbose_name='date joined')),
                ('activation_token', models.CharField(blank=True, help_text="A temporary token used to activate the user's account upon being invited to the site initially.", max_length=36, null=True, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', gardenhub.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='The name of this affiliation.', max_length=255)),
                ('managers', models.ManyToManyField(blank=True, help_text='People who can edit this affiliation.', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='All lowercase name of this crop.', max_length=255, unique=True)),
                ('image', models.ImageField(help_text='Photo of this crop.', upload_to='crops')),
            ],
        ),
        migrations.CreateModel(
            name='Garden',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('address', models.CharField(help_text='The full, neatly-formatted mailing address of this garden.', max_length=255)),
                ('photo', models.ImageField(blank=True, help_text='A photo of this garden.', upload_to='gardens')),
                ('affiliations', models.ManyToManyField(blank=True, help_text="This garden's affiliations.", related_name='gardens', to='gardenhub.Affiliation')),
                ('managers', models.ManyToManyField(blank=True, help_text='People who can edit this garden, edit plots on this garden, and view/place orders for plots on this garden.', related_name='gardens', to=settings.AUTH_USER_MODEL)),
                ('pickers', models.ManyToManyField(blank=True, help_text='People who are assigned to fulfill orders on this garden.', related_name='_garden_pickers_+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='The exact moment this order was submitted.')),
                ('pick_all', models.BooleanField(default=False, help_text='Whether all crops on the physical plot should be picked or not. When checked, the `crops` field is ignored.')),
                ('start_date', models.DateField(help_text='The day picking should begin for this order.')),
                ('end_date', models.DateField(help_text='The day picking should end for this order.')),
                ('canceled', models.BooleanField(default=False, help_text='Whether or not this order has been canceled.')),
                ('canceled_timestamp', models.DateTimeField(blank=True, help_text='The moment this order was canceled, if so.', null=True)),
                ('comment', models.TextField(blank=True, help_text='Additional comments about this order.')),
                ('crops', models.ManyToManyField(blank=True, help_text='Crops that should be picked for this order.', to='gardenhub.Crop')),
            ],
            options={
                'ordering': ['start_date'],
            },
        ),
        migrations.CreateModel(
            name='Pick',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, editable=False, help_text='The exact moment this pick was submitted.')),
                ('crops', models.ManyToManyField(help_text='Crops that were harvested by this pick.', to='gardenhub.Crop')),
                ('picker', models.ForeignKey(help_text='Person who submitted this pick.', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Plot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="The plot's name is probably a number, like 11. The plot should be clearly labeled with a sign.", max_length=255)),
                ('crops', models.ManyToManyField(blank=True, related_name='_plot_crops_+', to='gardenhub.Crop')),
                ('garden', models.ForeignKey(help_text='The garden this plot is a part of.', on_delete=django.db.models.deletion.CASCADE, related_name='plots', to='gardenhub.Garden')),
                ('gardeners', models.ManyToManyField(blank=True, help_text='People who grow food on this plot. Listing them here enables them to place orders.', related_name='plots', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='pick',
            name='plot',
            field=models.ForeignKey(help_text='Plot this pick occurred upon.', on_delete=django.db.models.deletion.PROTECT, related_name='picks', to='gardenhub.Plot'),
        ),
        migrations.AddField(
            model_name='order',
            name='plot',
            field=models.ForeignKey(help_text='The plot this order targets for picking.', on_delete=django.db.models.deletion.PROTECT, to='gardenhub.Plot'),
        ),
        migrations.AddField(
            model_name='order',
            name='requester',
            field=models.ForeignKey(help_text='Person who submitted this order.', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
    ]
